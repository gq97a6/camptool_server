plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.9.10"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.9.10"
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-websockets'
    implementation 'io.quarkus:quarkus-container-image-docker'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    implementation 'io.quarkus:quarkus-reactive-mysql-client'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.quarkus:quarkus-hibernate-reactive-panache-kotlin'
    implementation 'io.vertx:vertx-auth-webauthn:4.5.0'
    implementation 'io.vertx:vertx-lang-kotlin-coroutines:4.5.0'
    implementation 'org.mindrot:jbcrypt:0.4'
}

group 'com.campbuddy'
version '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

allOpen {
    annotation("jakarta.ws.rs.Path")
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("jakarta.persistence.Entity")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}

tasks.register('deployVps') {
    // Ensure this task runs after the Quarkus image build task
    dependsOn 'imageBuild'

    doLast {
        // Step 1: Quarkus image build is already handled by the quarkusBuild task

        // Step 2: Push the Docker image to the registry
        exec {
            commandLine 'cmd', '/c', 'docker', 'push', 'gq97a6/images:camp-1.0.0'
        }

        // Step 3: SSH into the VPS and run the Docker Compose command
        exec {
            commandLine 'cmd', '/c', 'ssh', 'vps', '"docker compose -f /own/docker/pjatk.yml up -d --force-recreate camp --pull gq97a6/images:camp-1.0.0"'
        }
    }
}
